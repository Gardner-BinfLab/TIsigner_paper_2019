<?phprequire_once "CodonOpt_Controller_ViewResultSummaryInsertNewResult.php";//This class is used to view current user defined sequences, and to add new UDS to the tableclass CodonOpt_Controller_ViewResultSummaryUser extends CodonOpt_Controller_ViewResultSummaryInsertNewResult {	//Constructor Takes in Current Job, and uses it to instantiate Jobs Controller	public function CodonOpt_Controller_ViewResultSummaryUser() {		parent::__construct(	//Pass Job and results to Parent			null,				//No User job			true				//This IS a user inserted result		);		$ResultsSummaryArray = 	//Parse Results			CodonOpt_DAO_user_results::selectUserDefinedSeqByEncryptId( $this->getEncrypt_Id() );		$this->ParseResults($ResultsSummaryArray);	}		public function checkAndSave($ReturnToSummary) {		$UserResult = $this->validateGenerateNewUserResult();	//Validate User Results		if ( isset($UserResult) ) {								//If Result object is valid			$CurrDisplayID = 									//Get current display ID				CodonOpt_DAO_user_results::getCurrentMaxDisplayIdForUserDefinedSeqBySerial( $this->getCurrentJob()->getSerial() );			$UserResult->setDisplay_id($CurrDisplayID+1);		//Add Display ID to object			CodonOpt_DAO_user_results::							//Save object to Database				insertNewUserResult($UserResult);			if ($ReturnToSummary) {								//If we want to return to summary				header("Location: viewresult.php?".$this::getEncryptIDGetKey()."=".$this->getEncrypt_Id());				exit;											//Redirect back to processing page			} else {											//Otherwise Stay on this page				header("Location: viewresult_done_userdefseq.php?".$this::getEncryptIDGetKey()."=".$this->getEncrypt_Id());				exit;											//Redirect to (reload) this page (prevents form resubmission on page refresh error)				/*				$ResultsSummaryArray = 							//Reload Results					CodonOpt_DAO_user_results::selectUserDefinedSeqByEncryptId( $this->getEncrypt_Id() );				$this->ParseResults($ResultsSummaryArray);				$this->setTitle("");							//Clear existing values				$this->setInputSequence("");				$this->CleanedInput = "";				*/			}		} else {												//Otherwise result validation failed			//Do Nothing		}	}}?>